image: node:10.19.0-alpine@sha256:5498d6cb4d240644bfbef7de4a0b61769cc0ebc31a34183512bdfd0f73cf3692

.executor-docker: &executor-docker
  tags:
    - docker

.not-branches: &not-branches
  only:
    - master
    - next-5.x
    - tags
    - develop

stages:
  - build
  - compliance
  - security-tests
  - unit-tests
  - quality-tests
  - reporting

npm:
  stage: build
  <<: *executor-docker
  script:
    - npm i --no-save --no-optional
    - npm dedupe
  artifacts:
    expire_in: 60 mins
    paths:
      - ./dist
      - ./node_modules
      - ./package-lock.json

eslint:
  stage: compliance
  <<: *executor-docker
  dependencies:
    - npm
  script:
    - npm run compliance:lint

coverage:
  stage: unit-tests
  <<: *executor-docker
  dependencies:
    - npm
  script:
    - npm run tests:coverage
  artifacts:
    expire_in: 60 mins
    paths:
      - ./.coverage

sonar-scanner:
  stage: quality-tests
  <<: *executor-docker
  <<: *not-branches
  image: "$CI_REGISTRY/engineering-practice/sonar-scanner:latest"
  dependencies:
    - coverage
  script:
    - 'sonar-scanner -Dsonar.projectBaseDir="$CI_PROJECT_DIR"'

sensitives:
  stage: security-tests
  <<: *executor-docker
  script:
    - apk add git
    - eval "git log -p | grep ${LOG_SCAN_QUERY}" && exit 1 || exit 0

dep-vuln:
  stage: security-tests
  <<: *executor-docker
  dependencies:
    - npm
  script:
    - npm run security:audit

outdated:
  stage: security-tests
  <<: *executor-docker
  dependencies:
    - npm
  script:
    - npm outdated
  allow_failure: true

